{
  "name": "@tsdiapi/prisma",
  "description": "A TSDIAPI plugin for database management using Prisma ORM.",
  "postInstall": "npx prisma init",
  "prisma": {
    "required": true,
    "scripts": [
      {
        "command": "ADD GENERATOR dto_generator ({ provider='node node_modules/prisma-class-dto-generator' output='../src/prisma-models' });",
        "description": "Add Prisma class-DTO generator."
      },
      {
        "command": "ADD MODEL Tsdiapi ({version Int});",
        "description": "Add a sample Prisma model."
      }
    ]
  },
  "provideScripts": {
    "postinstall": "prisma generate"
  },
  "variables": [
    {
      "name": "DATABASE_TYPE",
      "type": "string",
      "default": "PostgreSQL",
      "configurable": true,
      "description": "Select your database type",
      "inquirer": {
        "type": "list",
        "message": "Choose your database type:",
        "choices": [
          "PostgreSQL",
          "MySQL",
          "SQLite",
          "SQL Server"
        ]
      }
    },
    {
      "name": "DATABASE_URL",
      "type": "string",
      "default": "",
      "configurable": true,
      "description": "Database connection string",
      "inquirer": {
        "message": "Enter your database connection string:",
        "required": true
      }
    }
  ],
  "files": [
    {
      "source": "files/prisma/*.*",
      "destination": "prisma/"
    },
    {
      "source": "files/src/*.ts",
      "destination": "src/"
    }
  ],
  "generators": [
    {
      "name": "event",
      "description": "Generate a Prisma event listener.",
      "files": [
        {
          "source": "generators/event/*.*",
          "destination": ".",
          "isHandlebarsTemplate": true
        }
      ],
      "args": [
        {
          "name": "modelName",
          "description": "Prisma model name (e.g., 'User', 'Order').",
          "inquirer": {
            "type": "input",
            "message": "Enter the Prisma model name:"
          },
          "validate": {
            "type": "string",
            "pattern": "^[A-Za-z_][A-Za-z0-9_]*$",
            "errorMessage": "Model name must be a valid identifier."
          },
          "transform": "capitalize(x)"
        },
        {
          "name": "operation",
          "description": "Prisma operation type.",
          "inquirer": {
            "type": "list",
            "message": "Select the Prisma operation:",
            "choices": [
              "FindUnique",
              "FindUniqueOrThrow",
              "FindFirst",
              "FindFirstOrThrow",
              "FindMany",
              "Create",
              "CreateMany",
              "Delete",
              "Update",
              "DeleteMany",
              "UpdateMany",
              "Upsert",
              "Aggregate",
              "GroupBy",
              "Count"
            ]
          }
        }
      ],
      "postMessages": [
        "‚úÖ Event listener generated successfully!"
      ]
    },
    {
      "name": "hook",
      "description": "Generate a Prisma operation hook.",
      "files": [
        {
          "source": "generators/hook/*.*",
          "destination": ".",
          "isHandlebarsTemplate": true
        }
      ],
      "args": [
        {
          "name": "modelName",
          "description": "Prisma model name (e.g., 'User', 'Order').",
          "inquirer": {
            "type": "input",
            "message": "Enter the Prisma model name:"
          },
          "validate": {
            "type": "string",
            "pattern": "^[A-Za-z_][A-Za-z0-9_]*$",
            "errorMessage": "Model name must be a valid identifier."
          },
          "transform": "capitalize(x)"
        },
        {
          "name": "operation",
          "description": "Prisma operation type.",
          "inquirer": {
            "type": "list",
            "message": "Select the Prisma operation:",
            "choices": [
              "FindUnique",
              "FindUniqueOrThrow",
              "FindFirst",
              "FindFirstOrThrow",
              "FindMany",
              "Create",
              "CreateMany",
              "Delete",
              "Update",
              "DeleteMany",
              "UpdateMany",
              "Upsert",
              "Aggregate",
              "GroupBy",
              "Count"
            ]
          }
        }
      ],
      "postMessages": [
        "‚úÖ Operation hook generated successfully!"
      ]
    }
  ],
  "postMessages": [
    "‚úÖ Prisma setup complete!",
    "‚ùó‚ùó Open 'prisma/schema.prisma' and define your models! ‚ùó‚ùó",
    "üìå Use 'npx prisma generate' to regenerate the Prisma client.",
    "‚ö° Run 'npx prisma migrate dev' to apply migrations."
  ]
}